
* DTNRPyC[0%]

** TODO Client stuff[0%]
*** TODO exit waiting mode after receiving[100%]  
**** DONE result 
**** DONE error
**** DONE error handling in newsince mode 
**** DONE thow an error if a file defined in a jobfile is not present

** TODO Cascade[90%]
*** DONE Path problems 
*** DONE move all files to /tmp/BUNDLE_ID/
*** DONE global filters in jobfile
*** DONE delete files after creating zipfiles etc
*** DONE check and delete raw files
*** DONE delete files on client side
*** DONE BUG: sometimes a zip is not identified correctly
*** DONE check if client is sending an inital file as argument and make sure it exists
*** DONE change filename to sth like timestamp_client_sid
*** TODO cases for server finding [random, best, distribution, first][50%]
**** DONE first
**** DONE random
**** TODO best -> filter
**** DONE distribution
**** TODO Definitions in [dtn_rpyc.py, client.py]
     
** Error logging[100%]
*** DONE sending jobfile to client if error occured on a server
*** DONE global variables cleanup after a job is done 
*** DONE make a zip from jobfile + error if it exists
*** DONE delete logfile zips and files after sending 
*** DONE do nothing on keyboardinterrupt
*** DONE show the error from a bundle and exit the current process 

** TODO Serval wrapper[80%]
*** DONE rework 'new_since'
*** DONE fix the server crash after the second procedure --> client cleanup bundle is to blame
*** DONE parse blocks instead of full json 'files'
*** TODO fix the parser -> sometimes it gets stuck[0%]
**** TODO rework the parser
**** TODO maybe use a queue and constant thread looking for new rpcs
*** DONE sometimes errors are not handled by the client
*** TODO rework cleanup[0%]
**** TODO client cleanup bundle
**** TODO server cleanup bundle

** TODO Test new functionality[66%]
*** DONE error logging[100%]
**** DONE zipfile creation
**** DONE sending files
**** DONE variable cleanup
*** TODO 'new_since'
*** DONE cascade[100%]
**** DONE new paths
**** DONE global filters
**** DONE cleanup --> delete files	
     
